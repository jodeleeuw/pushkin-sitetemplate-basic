"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _uuid = require("uuid");

var REPLY_QUEUE = 'amq.rabbitmq.reply-to'; // returns a promise that resolves to the result of the RPC

var _default = function _default(conn, channelName, body) {
  console.log("rpc got call (".concat(conn, ", ").concat(channelName, ", ").concat(JSON.stringify(body), ")"));
  return new Promise(function (resolve, reject) {
    return conn.createChannel().then(function (ch) {
      var corr = (0, _uuid.v4)();

      var received = function received(msg) {
        console.log("received msg not necessarily for us: ".concat(JSON.stringify(msg)));

        if (!msg) {
          console.log('got falsy message');
          return; // connection closed sends blank message
        }

        if (msg.properties.correlationId !== corr) {
          console.log('got message with different corr id');
          return; // not a message for us
        }

        var content = JSON.parse(msg.content.toString('utf8'));
        console.log("RPC received: ".concat(JSON.stringify(content)));
        ch.close();
        resolve(content);
      };

      ch.consume(REPLY_QUEUE, received, {
        noAck: true
      });
      return ch.sendToQueue(channelName, new Buffer(JSON.stringify(body)), {
        correlationId: corr,
        replyTo: REPLY_QUEUE
      });
    })["catch"](function (err) {
      console.error(err);
      reject(err);
    });
  });
};

exports["default"] = _default;